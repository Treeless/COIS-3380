#!/bin/bash

#---------------------------------------
# Ips of log
#
# Name: ipsoflog
#
# Written by: Matthew Rowlandson - January 2017
#
# Usage: ./ipsoflog <logfile> <optional search filter>
#       eg. ./ipsoflog /home/common/warn "authentication failure"W
#
# Description: Outputs the top 10 ips of the log and their locations based on the search criteria given
#
#----------------------------------------

# Set the variables to use in the script
LOGFILE="$1"
if [ -z "$2" ]; then
   SEARCH="Authentication failure"
else
   SEARCH="$2"
fi

# IP address regular expression
REGEX='[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'

#cleanup file for top 10 ips if exists
rm -f /tmp/top10ips

# Make sure the log file exists
if [ ! -e "$LOGFILE" ] ; then
    echo "$LOGFILE" does not exist..
    exit
fi

#Get all the IPS that match the search criteria
grep "$SEARCH" "$LOGFILE" | grep -o $REGEX | sort | uniq -c | sort -nr | head -10 > /tmp/top10ips

#Make some tmp folders and make sure they are empty
mkdir -p /tmp/ipswithloc;
rm -f /tmp/ipswithloc/*.txt;
mkdir -p /tmp/finalips;
rm -f /tmp/finalips/*.txt;

#PARSE TOP 10 IPS From File and find their locations
awk '{print $1, $2}' /tmp/top10ips | while read o i; do

#Ask ipinfo.io the location of the ip and put it into a file 
while [ 1 ]; do
    wget -q -w 1 --random-wait -O /tmp/ipswithloc/$i.txt http://www.ipinfo.io/$i --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue
    if [ $? = 0 ]; then break; fi; # check return value, break if successful (0)
    sleep 1s;
done;

#Format a file with the ip information we need
echo -n $o >> /tmp/finalips/$i.txt;
echo -n " " >> /tmp/finalips/$i.txt;
echo -n $i >> /tmp/finalips/$i.txt;
echo -n " " >> /tmp/finalips/$i.txt;
grep -m 1 country /tmp/ipswithloc/$i.txt | sed -r 's/^ *//;s/.*: *"//;s/",?//' | tr -d '\012\015'| tr -d '[:space:]' >> /tmp/finalips/$i.txt; 
echo -n " " >> /tmp/finalips/$i.txt; 
grep -m 1 city /tmp/ipswithloc/$i.txt | sed -r 's/^ *//;s/.*: *"//;s/",?//' | tr -d '\012\015'| tr -d '[:space:]' >> /tmp/finalips/$i.txt;
done

#CONCAT ALL FORMATTER FILES INTO ONE FILE
rm -f "/tmp/finaliplist";
for file in /tmp/finalips/*; do
  if [[ $file =~ .*\.txt$ ]]; then
    echo $(cat $file) >> /tmp/finaliplist;
  fi
done

# Display the information
echo "Occurences IpAddress Country City";
cat /tmp/finaliplist | sort -bnr;
